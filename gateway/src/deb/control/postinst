#!/bin/bash
# postinst script for arrowhead-gateway
#
# see: dh_installdeb(1)

set -e

. /usr/share/debconf/confmodule

SYSTEM_NAME="gateway"
PKG_NAME="arrowhead-gateway"

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case "$1" in
    configure)
        . /usr/share/arrowhead/conf/ahconf.sh
        SYSTEM_DIR="${AH_SYSTEMS_DIR}/${SYSTEM_NAME}"

        echo "Configuring MySQL database..." >&2
        ah_db_user

        if [ ! -d "${SYSTEM_DIR}" ]; then
            mkdir -p ${SYSTEM_DIR}
        fi

        ah_cert_signed_system ${SYSTEM_NAME}

        if [ ! -f "${SYSTEM_DIR}/default.conf" ]; then
            db_get arrowhead-gateway/address; ADDRESS="$RET"
            if [ -z "${ADDRESS}" ]; then
                ADDRESS=($(hostname -I))
                db_set arrowhead-gateway/address "${ADDRESS}"
            fi
            db_input high arrowhead-gateway/address || true
            db_go || true
            db_get arrowhead-gateway/address; ADDRESS="$RET"

            /bin/cat <<EOF >${SYSTEM_DIR}/default.conf
############################################
###       APPLICATION PARAMETERS         ###
############################################

# Certificate related paths and passwords (mandatory in secure mode)
keystore=${SYSTEM_DIR}/${SYSTEM_NAME}.p12
keystorepass=${AH_PASS_CERT}
keypass=${AH_PASS_CERT}
truststore=${AH_CONF_DIR}/truststore.p12
truststorepass=${AH_PASS_CERT}
trustpass=${AH_PASS_CERT}
master_arrowhead_cert=${AH_CONF_DIR}/master.crt

# Gateway web-server parameters
address=${ADDRESS}
insecure_port=8452
secure_port=8453

# Service Registry web-server parameters (to register the Gateway services)
sr_address=0.0.0.0
sr_insecure_port=8442
sr_secure_port=8443

# Port range for socket openings (to facilitate inter-cloud communication between consumer and provider systems)
min_port=8000
max_port=8100
EOF
            chown root:arrowhead ${SYSTEM_DIR}/default.conf
            chmod 640 ${SYSTEM_DIR}/default.conf
        fi

        if [ ! -f "${SYSTEM_DIR}/log4j2.properties" ]; then
            /bin/cat <<EOF >${SYSTEM_DIR}/log4j2.properties
status=error
name=PropertiesConfig

filters=threshold

filter.threshold.type=ThresholdFilter
filter.threshold.level=info

appenders=console,file,db

appender.console.type=Console
appender.console.name=STDOUT
appender.console.layout.type=PatternLayout
appender.console.layout.pattern=%d{yyyy-MM-dd HH:mm:ss}  %p  %-160m  %c{1}.%M(%F:%L)%n

appender.file.type=File
appender.file.name=LOGFILE
appender.file.fileName=/var/log/arrowhead/service_registry_sql.log
appender.file.layout.type=PatternLayout
appender.file.layout.pattern=%d{yyyy-MM-dd HH:mm:ss}, %C, %p, %m%n
appender.file.append=false
appender.file.immediateFlush=true

appender.db.type=JDBC
appender.db.name=DB
appender.db.connectionSource.type=DriverManager
appender.db.connectionSource.connectionString=jdbc:mysql://127.0.0.1:3306/arrowhead?serverTimezone=UTC
appender.db.connectionSource.username=arrowhead
appender.db.connectionSource.password=${AH_PASS_DB}
appender.db.tableName=logs

appender.db.columnConfigs[0].type=Column
appender.db.columnConfigs[0].name=date
appender.db.columnConfigs[0].pattern=%d{yyyy-MM-dd HH:mm:ss}
appender.db.columnConfigs[0].isUnicode=false

appender.db.columnConfigs[2].type=Column
appender.db.columnConfigs[2].name=origin
appender.db.columnConfigs[2].pattern=%C
appender.db.columnConfigs[2].isUnicode=false

appender.db.columnConfigs[3].type=Column
appender.db.columnConfigs[3].name=level
appender.db.columnConfigs[3].pattern=%p
appender.db.columnConfigs[3].isUnicode=false

appender.db.columnConfigs[4].type=Column
appender.db.columnConfigs[4].name=message
appender.db.columnConfigs[4].pattern=%m
appender.db.columnConfigs[4].isUnicode=false

rootLogger.level=info
rootLogger.appenderRefs=stdout,file,db
rootLogger.appenderRef.stdout.ref=STDOUT
rootLogger.appenderRef.file.ref=LOGFILE
rootLogger.appenderRef.db.ref=DB
EOF
            chown root:arrowhead ${SYSTEM_DIR}/log4j2.properties
            chmod 640 ${SYSTEM_DIR}/log4j2.properties
        fi

        echo "Restarting ${PKG_NAME}..." >&2
        systemctl daemon-reload
        systemctl restart ${PKG_NAME}.service
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
